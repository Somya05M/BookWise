pipeline {
    agent any

    environment {
        DOCKER_IMAGE_NAME_BACKEND = 'bookwise-backend'
        DOCKER_IMAGE_NAME_FRONTEND = 'bookwise-frontend'
        GITHUB_REPO_URL = 'https://github.com/Somya05M/BookWise.git'
        FRONTEND_DEPLOYMENT_FILE = 'frontend-deployment.yml'
        BACKEND_DEPLOYMENT_FILE = 'backend-deployment.yml'
        KUBE_NAMESPACE = 'jenkins'  // Specify your namespace here
    }

    stages {

        stage('Run Docker Containers') {
            steps {
                script {
                    // Run Docker containers to build images
                    sh "docker-compose up -d --build"
                }
            }
        }

        stage('Push Docker Images Frontend') {
            steps {
                script {
                    docker.withRegistry('', 'DockerHubCred') {
                        // Tag and push Frontend Docker image to Docker Hub
                        sh "docker tag ${DOCKER_IMAGE_NAME_FRONTEND} somya2001/${DOCKER_IMAGE_NAME_FRONTEND}:latest"
                        sh "docker push somya2001/${DOCKER_IMAGE_NAME_FRONTEND}"
                    }
                }
            }
        }

        stage('Push Docker Images Backend') {
            steps {
                script {
                    docker.withRegistry('', 'DockerHubCred') {
                        // Tag and push Backend Docker image to Docker Hub
                        sh "docker tag ${DOCKER_IMAGE_NAME_BACKEND} somya2001/${DOCKER_IMAGE_NAME_BACKEND}:latest"
                        sh "docker push somya2001/${DOCKER_IMAGE_NAME_BACKEND}"
                    }
                }
            }
        }

        stage('Unit Test') {
            steps {
                script {
                    // Run the Python test script directly
                    sh "python3 test.py"
                }
            }
        }

        stage('Deploy to kubernets'){
            steps{
                script{
                    dir('Kubernetes') {
                        withKubeConfig(caCertificate: '', clusterName: '', contextName: '', credentialsId: 'jenkins-secret', namespace: 'jenkins', restrictKubeConfigAccess: false, serverUrl: '') {
                                sh "kubectl apply -f ${FRONTEND_DEPLOYMENT_FILE} -n ${KUBE_NAMESPACE}"
                                sh "kubectl apply -f ${BACKEND_DEPLOYMENT_FILE} -n ${KUBE_NAMESPACE}"
                        }
                    }
                }
            }
        }

        // stage('Deploy Frontend to Kubernetes') {
        //     steps {
        //         script {
        //             // Deploy frontend to Kubernetes
        //             sh "kubectl apply -f ${FRONTEND_DEPLOYMENT_FILE} -n ${KUBE_NAMESPACE}"
        //         }
        //     }
        // }

        // stage('Deploy Backend to Kubernetes') {
        //     steps {
        //         script {
        //             // Deploy backend to Kubernetes
        //             sh "kubectl apply -f ${BACKEND_DEPLOYMENT_FILE} -n ${KUBE_NAMESPACE}"
        //         }
        //     }
        // }
    }
}
