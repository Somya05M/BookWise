pipeline {
    agent {
        kubernetes {
            cloud 'kubernetes' // Name of your Kubernetes cloud instance in Jenkins
            defaultContainer 'jnlp'
            yaml """
                apiVersion: v1
                kind: Pod
                metadata:
                  labels:
                    app: myapp
                spec:
                  containers:
                  - name: docker
                    image: docker:latest
                    command:
                    - sleep
                    - infinity
              """
        }
    }

    environment {
        DOCKER_IMAGE_NAME_BACKEND = 'bookwise-backend'
        DOCKER_IMAGE_NAME_FRONTEND = 'bookwise-frontend'
        GITHUB_REPO_URL = 'https://github.com/Somya05M/BookWise.git'
        FRONTEND_DEPLOYMENT_FILE = 'frontend-deployment.yml'
        BACKEND_DEPLOYMENT_FILE = 'backend-deployment.yml'
        KUBE_NAMESPACE = 'jenkins'  // Specify your namespace here
    }

    stages {
        stage('Run Docker Containers') {
            steps {
                container('docker') {
                    // Run Docker containers to build images
                    sh "docker-compose up -d --build"
                }
            }
        }

        stage('Push Docker Images Frontend') {
            steps {
                container('docker') {
                    docker.withRegistry('', 'DockerHubCred') {
                        // Tag and push Frontend Docker image to Docker Hub
                        sh "docker tag ${DOCKER_IMAGE_NAME_FRONTEND} somya2001/${DOCKER_IMAGE_NAME_FRONTEND}:latest"
                        sh "docker push somya2001/${DOCKER_IMAGE_NAME_FRONTEND}"
                    }
                }
            }
        }

        stage('Push Docker Images Backend') {
            steps {
                container('docker') {
                    docker.withRegistry('', 'DockerHubCred') {
                        // Tag and push Backend Docker image to Docker Hub
                        sh "docker tag ${DOCKER_IMAGE_NAME_BACKEND} somya2001/${DOCKER_IMAGE_NAME_BACKEND}:latest"
                        sh "docker push somya2001/${DOCKER_IMAGE_NAME_BACKEND}"
                    }
                }
            }
        }

        stage('Unit Test') {
            steps {
                container('docker') {
                    // Run the Python test script directly
                    sh "python3 test.py"
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                container('docker') {
                    withKubeConfig(credentialsId: 'jenkins-secret', namespace: "${KUBE_NAMESPACE}") {
                        sh "kubectl apply -f ${FRONTEND_DEPLOYMENT_FILE}"
                        sh "kubectl apply -f ${BACKEND_DEPLOYMENT_FILE}"
                    }
                }
            }
        }
    }
}
