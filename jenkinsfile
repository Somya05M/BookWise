pipeline {
    agent {
        kubernetes {
            cloud 'kubernetes'
            label 'build-pod'
            defaultContainer 'jnlp'
            yaml """
            apiVersion: v1
            kind: Pod
            metadata:
              labels:
                jenkins: build-pod
            spec:
              containers:
              - name: docker
                image: docker:19.03.12
                command:
                - cat
                tty: true
            """
        }
    }

    environment {
        DOCKER_IMAGE_NAME_BACKEND = 'bookwise-backend'
        DOCKER_IMAGE_NAME_FRONTEND = 'bookwise-frontend'
        GITHUB_REPO_URL = 'https://github.com/Somya05M/BookWise.git'
        FRONTEND_DEPLOYMENT_FILE = 'frontend-deployment.yml'
        BACKEND_DEPLOYMENT_FILE = 'backend-deployment.yml'
        KUBE_NAMESPACE = 'jenkins'  // Specify your namespace here
    }

    stages {
        stage('Run Docker Containers') {
            steps {
                script {
                    try {
                        // Run Docker containers to build images
                        sh "docker-compose up -d --build"
                    } catch (Exception e) {
                        error "Failed to run Docker containers: ${e.message}"
                    }
                }
            }
        }

        stage('Push Docker Images Frontend') {
            steps {
                script {
                    try {
                        // Tag and push Frontend Docker image to Docker Hub
                        sh "docker tag ${DOCKER_IMAGE_NAME_FRONTEND} somya2001/${DOCKER_IMAGE_NAME_FRONTEND}:latest"
                        sh "docker push somya2001/${DOCKER_IMAGE_NAME_FRONTEND}"
                    } catch (Exception e) {
                        error "Failed to push Frontend Docker image: ${e.message}"
                    }
                }
            }
        }

        stage('Push Docker Images Backend') {
            steps {
                script {
                    try {
                        // Tag and push Backend Docker image to Docker Hub
                        sh "docker tag ${DOCKER_IMAGE_NAME_BACKEND} somya2001/${DOCKER_IMAGE_NAME_BACKEND}:latest"
                        sh "docker push somya2001/${DOCKER_IMAGE_NAME_BACKEND}"
                    } catch (Exception e) {
                        error "Failed to push Backend Docker image: ${e.message}"
                    }
                }
            }
        }

        stage('Unit Test') {
            steps {
                script {
                    try {
                        // Run the Python test script directly
                        sh "python3 test.py"
                    } catch (Exception e) {
                        error "Unit tests failed: ${e.message}"
                    }
                }
            }
        }

        stage('Deploy Frontend to Kubernetes') {
            steps {
                script {
                    try {
                        // Deploy frontend to Kubernetes
                        withCredentials([string(credentialsId: 'jenkins-secret')]) {
                            sh "kubectl apply -f ${FRONTEND_DEPLOYMENT_FILE} -n ${KUBE_NAMESPACE}"
                        }
                    } catch (Exception e) {
                        error "Failed to deploy frontend to Kubernetes: ${e.message}"
                    }
                }
            }
        }

        stage('Deploy Backend to Kubernetes') {
            steps {
                script {
                    try {
                        // Deploy backend to Kubernetes
                        withCredentials([string(credentialsId: 'jenkins-secret')]) {
                            sh "kubectl apply -f ${BACKEND_DEPLOYMENT_FILE} -n ${KUBE_NAMESPACE}"
                        }
                    } catch (Exception e) {
                        error "Failed to deploy backend to Kubernetes: ${e.message}"
                    }
                }
            }
        }
    }
}
