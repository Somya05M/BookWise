pipeline {
    agent any

    environment {
        DOCKER_IMAGE_NAME_BACKEND = 'bookwise-backend'
        DOCKER_IMAGE_NAME_FRONTEND = 'bookwise-frontend'
        GITHUB_REPO_URL = 'https://github.com/Somya05M/BookWise.git'
        DOCKER_COMPOSE_FILE = 'docker-compose.yml'
        NOTEBOOK_FILENAME = 'book-recommender-system.py'
    }

    stages {

        stage('Run Docker Compose') {
            steps {
                script {
                    // Run docker-compose
                    sh "docker-compose -f ${env.DOCKER_COMPOSE_FILE} up -d"
                }
            }
        }

        stage('Push Docker Images Frontend') {
            steps {
                script {
                    docker.withRegistry('', 'DockerHubCred') {
                        // Tag and push Frontend Docker image to Docker Hub
                        sh "docker tag bookwise-frontend somya2001/${env.DOCKER_IMAGE_NAME_FRONTEND}:latest"
                        sh "docker push somya2001/${env.DOCKER_IMAGE_NAME_FRONTEND}"
                    }
                }
            }
        }

        stage('Push Docker Images Backend') {
            steps {
                script {
                    docker.withRegistry('', 'DockerHubCred') {
                        // Tag and push Backend Docker image to Docker Hub
                        sh "docker tag bookwise-backend somya2001/${env.DOCKER_IMAGE_NAME_BACKEND}:latest"
                        sh "docker push somya2001/${env.DOCKER_IMAGE_NAME_BACKEND}"
                    }
                }
            }
        }

        stage('Unit Test') {
            steps {
                script {
                    // Run the Python test script directly
                    sh "python3 test.py"
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                script {
                    withKubeConfig(caCertificate: '', clusterName: '', contextName: '', credentialsId: 'jenkins-secret', namespace: '', restrictKubeConfigAccess: false, serverUrl: '') {
                        sh 'kubectl apply -f frontend-deployment.yml --validate=false'
                        sh 'kubectl apply -f backend-deployment.yml --validate=false'
                    }
                }
            }
        }
    }
}
